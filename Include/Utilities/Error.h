#ifndef _INCL_UTILITIES_ERROR
#define _INCL_UTILITIES_ERROR

typedef unsigned int ERROR_TYPE;

#define RET_IF_ERR(error) if (error != ERROR_NONE) return error;
#define RET_IF_NO_ERR(error) if (error == ERROR_NONE) return error;

#define ERROR_NONE 0
#define ERROR_FAIL_TO_OPEN 1
#define ERROR_END_OF_FILE 2
#define ERROR_UNEXPECTED_CHARACTER 3

#define ERROR_NO_PROGRAM_END 100
#define ERROR_NO_OCCURRENCE 101
#define ERROR_INVALID_PROGRAM_HEADER 102
#define ERROR_INVALID_PROGRAM_BODY 103
#define ERROR_INVALID_DECLARATION 104
#define ERROR_INVALID_TYPE_MARK 105
#define ERROR_INVALID_PARAMETER_LIST 106
#define ERROR_INVALID_ENUM 107
#define ERROR_INVALID_BOUND 108
#define ERROR_INVALID_TYPE_DECLARATION 109
#define ERROR_INVALID_VARIABLE_DECLARATION 110
#define ERROR_INVALID_STATEMENT 111
#define ERROR_INVALID_IF_STATEMENT 112
#define ERROR_INVALID_LOOP_STATEMENT 113
#define ERROR_INVALID_RETURN_STATEMENT 114
#define ERROR_INVALID_IDENTIFIER 115
#define ERROR_INVALID_PROCEDURE_CALL_OR_NAME 116
#define ERROR_INVALID_STRING 117
#define ERROR_INVALID_NUMBER 118
#define ERROR_INVALID_DESTINATION 119
#define ERROR_INVALID_ARGUMENT_LIST 120
#define ERROR_INVALID_PROCEDURE_HEADER 121
#define ERROR_INVALID_PROCEDURE_BODY 122
#define ERROR_INVALID_PROCEDURE_DECLARATION 123
#define ERROR_INVALID_EXPRESSION 124
#define ERROR_INVALID_ARITH_OP 125
#define ERROR_INVALID_RELATION 126
#define ERROR_INVALID_TERM 127
#define ERROR_INVALID_FACTOR 128

//#define ERROR_MISSING_IDENTIFIER 1000
#define ERROR_MISSING_SEMICOLON 1001
#define ERROR_MISSING_COLON 1002
#define ERROR_MISSING_BRACKET 1003
#define ERROR_MISSING_PAREN 1004
#define ERROR_MISSING_ASSIGN 1005

#include <string>

namespace Error
{
    void ReportError(ERROR_TYPE error, std::string message);
    void ReportWarning(ERROR_TYPE error, std::string message);

    bool HasError();
    bool HasWarning();

    void ClearAllErrors();
    void ClearAllWarnings();

    void PrintAllErrors(std::ostream outStream);
    void PrintAllWarnings(std::ostream outStream);
}

#endif